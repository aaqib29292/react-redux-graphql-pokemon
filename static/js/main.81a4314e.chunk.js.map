{"version":3,"sources":["routes/List/List.module.scss","services/request.js","constants/index.js","queries/index.js","actions/index.js","routes/List/List.js","routes/Details/Details.js","routes/Error/Error.js","reducers/index.js","reducers/data.js","reducers/limit.js","reducers/details.js","index.js","routes/Details/Details.module.scss"],"names":["module","exports","link","HttpLink","uri","cors_api_url","request","query","variables","operation","makePromise","execute","REQUEST_DATA","RECEIVE_DATA","RECEIVED_ERROR","INCREASE_LIMIT","FETCHING_MORE","REQUEST_DETAILS","RECEIVE_DETAILS","getDataQuery","gql","getPokemonDetails","receiveData","data","type","receivedAt","Date","now","receiveError","fetchData","dispatch","getState","limit","then","resp","pokemons","catch","error","fetchMoreData","loadMore","fetchDetails","id","details","receiveDetails","pokemon","PokemonCard","props","history","useHistory","Card","raised","onClick","push","Content","className","s","image","src","alt","name","Header","Description","classification","style","margin","types","map","x","i","Label","key","size","extra","Meta","number","List","useDispatch","useSelector","state","isFetching","isFetchingMore","didInvalidate","useEffect","loadMorePokemons","Dimmer","active","inverted","Loader","Container","Group","itemsPerRow","Button","fluid","loading","content","onKeyPress","e","charCode","preventDefault","color","EvolutionItem","Item","as","Image","verticalAlign","header","meta","Details","useParams","randomNum","Math","floor","random","length","detailsContainer","textAlign","typeDescription","weaknesses","evolutions","divided","goBack","Icon","Error","width","height","rootReducer","combineReducers","action","Object","assign","lastUpdated","store","createStore","applyMiddleware","thunkMiddleware","RenderApp","basename","to","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81a4314e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"List_image__39EI4\"};","import { execute, makePromise , HttpLink } from 'apollo-boost';\n \nconst cors_api_url = 'https://cors-anywhere.herokuapp.com/';\nconst uri = cors_api_url + 'https://graphql-pokemon2.vercel.app';\nconst link = new HttpLink({ uri });\n\nconst request = (query, variables) => {\n    const operation = {\n        query,\n        variables\n    };\n    return makePromise(execute(link, operation))\n}\n\nexport default request\n\n","export const REQUEST_DATA = \"REQUEST_DATA\";\nexport const RECEIVE_DATA = \"RECEIVE_DATA\";\n\nexport const RECEIVED_ERROR = \"RECEIVED_ERROR\";\n\nexport const INCREASE_LIMIT = \"INCREASE_LIMIT\";\nexport const FETCHING_MORE = \"FETCHING_MORE\";\n\nexport const REQUEST_DETAILS = \"REQUEST_DETAILS\";\nexport const RECEIVE_DETAILS = \"RECEIVE_DETAILS\";\n","import { gql } from 'apollo-boost';\n\nexport const getDataQuery = gql`query GetData($first: Int!) {\n                                  pokemons(first: $first) {\n                                    id\n                                    number\n                                    name\n                                    types\n                                    image\n                                    classification\n                                  }\n                                }`\n\nexport const getPokemonDetails = gql`query getPokemonDetails($id: String) {\n                                       pokemon(id: $id) {\n                                         number\n                                         name\n                                         types\n                                         weaknesses\n                                         image\n                                         evolutions {\n                                           id\n                                           name\n                                           image\n                                           number\n                                         }\n                                       }\n                                     }`\n","import request from './../services/request'\n\nimport { REQUEST_DATA, RECEIVE_DATA, INCREASE_LIMIT, REQUEST_DETAILS, RECEIVE_DETAILS, FETCHING_MORE, RECEIVED_ERROR} from './../constants';\n\nimport { getDataQuery, getPokemonDetails } from './../queries';\n\n\n// data dispatcher\n\nfunction requestData() {\n    return {\n        type: REQUEST_DATA,\n    }\n}\n\nfunction receiveData(data) {\n    return {\n        type: RECEIVE_DATA,\n        data,\n        receivedAt: Date.now()\n    }\n}\n\nfunction receiveError() {\n    return {\n        type: RECEIVED_ERROR,\n    }\n}\n\n\nexport function fetchData() {\n   return function(dispatch, getState) {\n        dispatch(requestData())\n\n        return request(getDataQuery, {'first': getState().limit})\n            .then(data => {\n                const resp = data.data\n                dispatch(receiveData(resp.pokemons))\n            })\n            .catch(error => {\n                dispatch(receiveError())\n            })\n\n    }\n}\n\n// fetching more data\n\nfunction fetchingMore() {\n    return {\n        type: FETCHING_MORE,\n    }\n}\n\n\nexport function fetchMoreData(limit) {\n    return function(dispatch, getState) {\n\n        dispatch(fetchingMore())\n\n        return request(getDataQuery, {'first': getState().limit})\n                    .then(data => {\n                        const resp = data.data\n                        dispatch(receiveData(resp.pokemons))\n                    })\n                    .catch(error => {\n                        dispatch(receiveError())\n                    })\n    }\n}\n\n// limit dispatcher\n\nfunction requestLimitIncrease () {\n    return {\n            type: INCREASE_LIMIT,\n        }\n}\n\nexport function loadMore() {\n    return function(dispatch) {\n        dispatch(requestLimitIncrease())\n    }\n}\n\n// details dispatcher\n\nfunction requestDetails(details) {\n    return {\n        type: REQUEST_DETAILS,\n        details\n    }\n}\n\nfunction receiveDetails(details) {\n    return {\n        type: RECEIVE_DETAILS,\n        details,\n        receivedAt: Date.now()\n    }\n}\n\nexport function fetchDetails(id) {\n   return function(dispatch) {\n\n        dispatch(requestDetails())\n\n        return request(getPokemonDetails, {'id': id})\n            .then(data => {\n                const resp = data.data\n                dispatch(receiveDetails(resp.pokemon))\n            })\n            .catch(error => {\n                // handle error case\n            })\n\n    }\n}\n","import React, {useEffect} from 'react';\nimport s from './List.module.scss';\n\nimport { Container, Dimmer, Loader, Card, Label, Button } from 'semantic-ui-react'\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {fetchData, loadMore, fetchMoreData} from '../../actions/index'\n\n\nconst PokemonCard = (props) => {\n    const { pokemon } = props;\n\n    let history = useHistory();\n\n    const handleOnClick = () => {\n        history.push(`/pokemon/${pokemon.id}`);\n    }\n\n    return (\n\n        <Card link raised onClick={handleOnClick}>\n            <Card.Content>\n              <img className={s.image} src={pokemon.image} alt={pokemon.name} />\n            </Card.Content>\n            <Card.Content>\n                <Card.Header>{pokemon.name}</Card.Header>\n                <Card.Description>\n                    <div>{pokemon.classification}</div>\n                    <div style={{margin: \"10px 0 0\"}}>\n                        {\n                            pokemon.types && pokemon.types.map((x, i) => {\n                                return <Label key={i} size=\"medium\">{x}</Label>\n                            })\n                        }\n                    </div>\n                </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n                <Card.Meta>\n                    <span className='date'>{pokemon.number}</span>\n                </Card.Meta>\n            </Card.Content>\n        </Card>\n    )\n}\n\nconst List = () => {\n    const dispatch = useDispatch();\n    let history = useHistory();\n    const { data, isFetching, isFetchingMore, didInvalidate } = useSelector(state => state.data)\n\n    useEffect(() => {\n        dispatch(fetchData())\n    }, [])\n\n    const loadMorePokemons = () => {\n        dispatch(loadMore())\n        dispatch(fetchMoreData())\n    }\n\n    const handleClick = () => loadMorePokemons();\n\n    const handleKeyPress = (e) => {\n        \n        if (e.charCode === 32 || e.charCode === 13) {\n            e.preventDefault();\n            loadMorePokemons();\n        }\n    }\n\n    if (isFetching) {\n        return <Dimmer active inverted>\n            <Loader size='large' inverted>Loading</Loader>\n        </Dimmer>\n    }\n\n    if (didInvalidate) {\n        history(\"/error\")\n    }\n    return (\n        <div style={{ margin: \"20px 0\"}}>\n            <Container>\n                <Card.Group itemsPerRow={4}>\n                    {\n                        data && data.map((x, i) => {\n                            return <PokemonCard key={i} pokemon={x}/>\n                        })\n                    }\n                </Card.Group>\n                <div style={{margin: \"10px 0\"}}>\n                    <Button\n                        fluid\n                        size={\"big\"}\n                        loading={isFetchingMore}\n                        content='Click to load more pokemons'\n                        onClick={handleClick}\n                        onKeyPress={handleKeyPress}\n                    />\n                </div>\n\n            </Container>\n        </div>\n    )\n}\n\nexport default List\n","import React, { useEffect } from 'react';\nimport s from './Details.module.scss';\n\nimport { Container, Dimmer, Loader, Card, Button, Label, Item, Icon } from 'semantic-ui-react';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchDetails } from '../../actions/index'\n\nconst color = ['red','orange', 'yellow', 'olive', 'green', 'teal', 'blue', 'violet', 'purple', 'pink', 'brown', 'grey',]\n\nconst EvolutionItem = (props) => {\n\n    let history = useHistory();\n\n    const {data: pokemon} = props\n\n    const handleOnClick = () => {\n        history.push(`/pokemon/${pokemon.id}`)\n    }\n    return (\n        <Item as={\"a\"} onClick={handleOnClick}>\n            <Item.Image size='tiny' src={pokemon.image} />\n            <Item.Content verticalAlign='middle' header={pokemon.name} meta={pokemon.number} ></Item.Content>\n        </Item>\n    )\n}\n\nconst Details = () => {\n    let { id } = useParams();\n    let history = useHistory();\n    const dispatch = useDispatch();\n    const { details:  pokemon, isFetching, didInvalidate } = useSelector(state => state.details)\n\n    useEffect(() => {\n        dispatch(fetchDetails(id))\n    }, [id])\n\n    if (isFetching) {\n        return <Dimmer active inverted>\n            <Loader size='large' inverted>Loading</Loader>\n        </Dimmer>\n    }\n    if (didInvalidate) {\n        history(\"/error\")\n    }\n\n    const randomNum = Math.floor(Math.random() * color.length);\n\n    return (\n        <div className={s.detailsContainer}>\n            <Container>\n                <Card fluid color={color[randomNum]} >\n                    <Card.Content style={{textAlign: \"center\"}}>\n                        <img className={s.image} src={pokemon.image} alt={pokemon.name} />\n                    </Card.Content>\n                    <Card.Content>\n                        <Card.Header>{pokemon.name}</Card.Header>\n                        <Card.Description>\n                            <div className={s.typeDescription}>\n                                <div >Strength: </div>\n                                <div style={{margin: \"10px 10px 0\"}}>\n                                    {\n                                        pokemon.types && pokemon.types.map((x, i) => {\n                                            return <Label key={i} size=\"medium\">{x}</Label>\n                                        })\n                                    }\n                                </div>\n                            </div>\n                            <div className={s.typeDescription}>\n                                <div>Weakness: </div>\n                                <div style={{margin: \"10px 10px 0\"}}>\n                                    {\n                                        pokemon.weaknesses && pokemon.weaknesses.map((x, i) => {\n                                            return <Label key={i} size=\"medium\">{x}</Label>\n                                        })\n                                    }\n                                </div>\n                            </div>\n                        </Card.Description>\n                    </Card.Content>\n                    {\n                        pokemon.evolutions &&\n                        <Card.Content>\n                            <Card.Header>Evolutions</Card.Header>\n                            <Item.Group divided>\n                                {\n                                    pokemon.evolutions && pokemon.evolutions.map((x, i) => {\n                                        return <EvolutionItem key={i} data={x}/>\n                                    })\n                                }\n                            </Item.Group>\n                        </Card.Content>\n                    }\n\n                    <Card.Content extra>\n                        <Card.Meta>\n                            <span className='date'>{pokemon.number}</span>\n                        </Card.Meta>\n                    </Card.Content>\n                </Card>\n                <Button fluid onClick={() => history.goBack() || history.push(\"/\") }><Icon name=\"arrow left\" />Back</Button>\n            </Container>\n        </div>\n    )\n}\n\nexport default Details\n","import React from 'react'\nimport { Image } from 'semantic-ui-react'\n\nconst Error = () => (\n    <div style={{ width: \"100wh\", height: \"100vh\"}}>\n        <Image style={{ width: \"100wh\", height: \"100vh\"}} src='/error.jpg' fluid />\n    </div>\n)\n\nexport default Error\n","import { combineReducers } from 'redux';\nimport data from './data';\nimport limit from './limit';\nimport details from './details';\n\nconst rootReducer = combineReducers({\n    data,\n    limit,\n    details\n})\n\nexport default rootReducer\n","import {\n    REQUEST_DATA,\n    RECEIVE_DATA,\n    FETCHING_MORE, RECEIVED_ERROR,\n} from '../constants/index'\n\nexport default function data(\n    state = {\n        isFetching: true,\n        didInvalidate: false,\n        isFetchingMore: false,\n        data: []\n    },\n    action\n) {\n    switch (action.type) {\n        case REQUEST_DATA:\n            return Object.assign({}, state, {\n                isFetching: true,\n                didInvalidate: false\n            })\n        case RECEIVE_DATA:\n            return Object.assign({}, state, {\n                isFetching: false,\n                didInvalidate: false,\n                isFetchingMore:false,\n                data: action.data,\n                lastUpdated: action.receivedAt\n            })\n        case FETCHING_MORE:\n            return Object.assign({}, state, {\n                isFetchingMore: true,\n            })\n        case RECEIVED_ERROR:\n            return Object.assign({}, state, {\n                didInvalidate: true,\n            })\n        default:\n            return state\n    }\n}\n","import { INCREASE_LIMIT } from '../constants/index'\n\n\nexport default function limit (state = 20, action) {\n    switch (action.type) {\n        case INCREASE_LIMIT:\n            return state + 20\n        default:\n            return state\n    }\n}\n","import {\n    REQUEST_DETAILS,\n    RECEIVE_DETAILS,\n    RECEIVED_ERROR\n} from '../constants/index'\n\nexport default function details(\n    state = {\n        isFetching: true,\n        didInvalidate: false,\n        details: {}\n    },\n    action\n) {\n    switch (action.type) {\n        case REQUEST_DETAILS:\n            return Object.assign({}, state, {\n                isFetching: true,\n                didInvalidate: false\n            })\n        case RECEIVE_DETAILS:\n            return Object.assign({}, state, {\n                isFetching: false,\n                didInvalidate: false,\n                details: action.details,\n                lastUpdated: action.receivedAt\n            })\n        case RECEIVED_ERROR:\n            return Object.assign({}, state, {\n                didInvalidate: true,\n            })\n        default:\n            return state\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport List from './routes/List/List';\nimport Details from './routes/Details/Details';\nimport Error from './routes/Error/Error';\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\n\nimport thunkMiddleware from 'redux-thunk';\n\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\n\n\nconst RenderApp = () => {\n    return (\n        <div>\n           <Router basename=\"/react-redux-graphql-pokemon/\">\n              <div style={{textAlign: \"center\"}}>\n                 <Link to=\"/\">\n                   <img style={{height: 120}} src={\"./pokemon-logo.png\"} alt=\"logo\" />\n                 </Link>\n\n              </div>\n               <Switch>\n                   <Route exact path=\"/\">\n                       <List/>\n                   </Route>\n                   <Route path=\"/pokemon/:id\">\n                       <Details/>\n                   </Route>\n                   <Route path=\"/error\">\n                       <Error/>\n                   </Route>\n               </Switch>\n           </Router>\n       </div>\n    )\n}\n\nconst ReduxApp = () => {\n    return (\n        <Provider store={store}>\n            <RenderApp />\n        </Provider>\n    )\n}\n\n\n\nReactDOM.render(<ReduxApp/>, document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailsContainer\":\"Details_detailsContainer__1j8Y4\",\"typeDescription\":\"Details_typeDescription__3wycw\"};"],"sourceRoot":""}